// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Proto/ClientService.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ClientService.API.Grpc {

  /// <summary>Holder for reflection information generated from Proto/ClientService.proto</summary>
  public static partial class ClientServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for Proto/ClientService.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ClientServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChlQcm90by9DbGllbnRTZXJ2aWNlLnByb3RvEglDbGllbnRBcGkiOAoOTW9k",
            "dWxlc1JlcXVlc3QSEAoIY2xpZW50SWQYASABKAMSFAoMZmFjaWxpdHlDb2Rl",
            "GAIgASgJIpkBCg9Nb2R1bGVzUmVzcG9uc2USEAoIY2xpZW50SWQYASABKAMS",
            "EgoKQ2xpZW50TmFtZRgCIAEoCRISCgpGYWNpbGl0eUlkGAMgASgDEhQKDEZh",
            "Y2lsaXR5Q29kZRgEIAEoCRIUCgxGYWNpbGl0eU5hbWUYBSABKAkSIAoEZGF0",
            "YRgGIAMoCzISLkNsaWVudEFwaS5Nb2R1bGVzIkwKB01vZHVsZXMSEgoKZmFj",
            "aWxpdHlJZBgBIAEoAxISCgpNb2R1bGVDb2RlGAIgASgJEhkKEU1vZHVsZURl",
            "c2NyaXB0aW9uGAMgASgJMnMKEkNsaWVudEFwaVJldHJpZXZhbBJdCiRGaW5k",
            "TW9kdWxlc0J5Q2xpZW50SWRBbmRGYWNpbGl0eUNvZGUSGS5DbGllbnRBcGku",
            "TW9kdWxlc1JlcXVlc3QaGi5DbGllbnRBcGkuTW9kdWxlc1Jlc3BvbnNlQhmq",
            "AhZDbGllbnRTZXJ2aWNlLkFQSS5HcnBjYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ClientService.API.Grpc.ModulesRequest), global::ClientService.API.Grpc.ModulesRequest.Parser, new[]{ "ClientId", "FacilityCode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ClientService.API.Grpc.ModulesResponse), global::ClientService.API.Grpc.ModulesResponse.Parser, new[]{ "ClientId", "ClientName", "FacilityId", "FacilityCode", "FacilityName", "Data" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ClientService.API.Grpc.Modules), global::ClientService.API.Grpc.Modules.Parser, new[]{ "FacilityId", "ModuleCode", "ModuleDescription" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ModulesRequest : pb::IMessage<ModulesRequest> {
    private static readonly pb::MessageParser<ModulesRequest> _parser = new pb::MessageParser<ModulesRequest>(() => new ModulesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ModulesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ClientService.API.Grpc.ClientServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModulesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModulesRequest(ModulesRequest other) : this() {
      clientId_ = other.clientId_;
      facilityCode_ = other.facilityCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModulesRequest Clone() {
      return new ModulesRequest(this);
    }

    /// <summary>Field number for the "clientId" field.</summary>
    public const int ClientIdFieldNumber = 1;
    private long clientId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ClientId {
      get { return clientId_; }
      set {
        clientId_ = value;
      }
    }

    /// <summary>Field number for the "facilityCode" field.</summary>
    public const int FacilityCodeFieldNumber = 2;
    private string facilityCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FacilityCode {
      get { return facilityCode_; }
      set {
        facilityCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ModulesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ModulesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClientId != other.ClientId) return false;
      if (FacilityCode != other.FacilityCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClientId != 0L) hash ^= ClientId.GetHashCode();
      if (FacilityCode.Length != 0) hash ^= FacilityCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ClientId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ClientId);
      }
      if (FacilityCode.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FacilityCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClientId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ClientId);
      }
      if (FacilityCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FacilityCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ModulesRequest other) {
      if (other == null) {
        return;
      }
      if (other.ClientId != 0L) {
        ClientId = other.ClientId;
      }
      if (other.FacilityCode.Length != 0) {
        FacilityCode = other.FacilityCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ClientId = input.ReadInt64();
            break;
          }
          case 18: {
            FacilityCode = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ModulesResponse : pb::IMessage<ModulesResponse> {
    private static readonly pb::MessageParser<ModulesResponse> _parser = new pb::MessageParser<ModulesResponse>(() => new ModulesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ModulesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ClientService.API.Grpc.ClientServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModulesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModulesResponse(ModulesResponse other) : this() {
      clientId_ = other.clientId_;
      clientName_ = other.clientName_;
      facilityId_ = other.facilityId_;
      facilityCode_ = other.facilityCode_;
      facilityName_ = other.facilityName_;
      data_ = other.data_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModulesResponse Clone() {
      return new ModulesResponse(this);
    }

    /// <summary>Field number for the "clientId" field.</summary>
    public const int ClientIdFieldNumber = 1;
    private long clientId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ClientId {
      get { return clientId_; }
      set {
        clientId_ = value;
      }
    }

    /// <summary>Field number for the "ClientName" field.</summary>
    public const int ClientNameFieldNumber = 2;
    private string clientName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClientName {
      get { return clientName_; }
      set {
        clientName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "FacilityId" field.</summary>
    public const int FacilityIdFieldNumber = 3;
    private long facilityId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long FacilityId {
      get { return facilityId_; }
      set {
        facilityId_ = value;
      }
    }

    /// <summary>Field number for the "FacilityCode" field.</summary>
    public const int FacilityCodeFieldNumber = 4;
    private string facilityCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FacilityCode {
      get { return facilityCode_; }
      set {
        facilityCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "FacilityName" field.</summary>
    public const int FacilityNameFieldNumber = 5;
    private string facilityName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FacilityName {
      get { return facilityName_; }
      set {
        facilityName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 6;
    private static readonly pb::FieldCodec<global::ClientService.API.Grpc.Modules> _repeated_data_codec
        = pb::FieldCodec.ForMessage(50, global::ClientService.API.Grpc.Modules.Parser);
    private readonly pbc::RepeatedField<global::ClientService.API.Grpc.Modules> data_ = new pbc::RepeatedField<global::ClientService.API.Grpc.Modules>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ClientService.API.Grpc.Modules> Data {
      get { return data_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ModulesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ModulesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClientId != other.ClientId) return false;
      if (ClientName != other.ClientName) return false;
      if (FacilityId != other.FacilityId) return false;
      if (FacilityCode != other.FacilityCode) return false;
      if (FacilityName != other.FacilityName) return false;
      if(!data_.Equals(other.data_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClientId != 0L) hash ^= ClientId.GetHashCode();
      if (ClientName.Length != 0) hash ^= ClientName.GetHashCode();
      if (FacilityId != 0L) hash ^= FacilityId.GetHashCode();
      if (FacilityCode.Length != 0) hash ^= FacilityCode.GetHashCode();
      if (FacilityName.Length != 0) hash ^= FacilityName.GetHashCode();
      hash ^= data_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ClientId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ClientId);
      }
      if (ClientName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ClientName);
      }
      if (FacilityId != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(FacilityId);
      }
      if (FacilityCode.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(FacilityCode);
      }
      if (FacilityName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(FacilityName);
      }
      data_.WriteTo(output, _repeated_data_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClientId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ClientId);
      }
      if (ClientName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientName);
      }
      if (FacilityId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FacilityId);
      }
      if (FacilityCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FacilityCode);
      }
      if (FacilityName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FacilityName);
      }
      size += data_.CalculateSize(_repeated_data_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ModulesResponse other) {
      if (other == null) {
        return;
      }
      if (other.ClientId != 0L) {
        ClientId = other.ClientId;
      }
      if (other.ClientName.Length != 0) {
        ClientName = other.ClientName;
      }
      if (other.FacilityId != 0L) {
        FacilityId = other.FacilityId;
      }
      if (other.FacilityCode.Length != 0) {
        FacilityCode = other.FacilityCode;
      }
      if (other.FacilityName.Length != 0) {
        FacilityName = other.FacilityName;
      }
      data_.Add(other.data_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ClientId = input.ReadInt64();
            break;
          }
          case 18: {
            ClientName = input.ReadString();
            break;
          }
          case 24: {
            FacilityId = input.ReadInt64();
            break;
          }
          case 34: {
            FacilityCode = input.ReadString();
            break;
          }
          case 42: {
            FacilityName = input.ReadString();
            break;
          }
          case 50: {
            data_.AddEntriesFrom(input, _repeated_data_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Modules : pb::IMessage<Modules> {
    private static readonly pb::MessageParser<Modules> _parser = new pb::MessageParser<Modules>(() => new Modules());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Modules> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ClientService.API.Grpc.ClientServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Modules() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Modules(Modules other) : this() {
      facilityId_ = other.facilityId_;
      moduleCode_ = other.moduleCode_;
      moduleDescription_ = other.moduleDescription_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Modules Clone() {
      return new Modules(this);
    }

    /// <summary>Field number for the "facilityId" field.</summary>
    public const int FacilityIdFieldNumber = 1;
    private long facilityId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long FacilityId {
      get { return facilityId_; }
      set {
        facilityId_ = value;
      }
    }

    /// <summary>Field number for the "ModuleCode" field.</summary>
    public const int ModuleCodeFieldNumber = 2;
    private string moduleCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModuleCode {
      get { return moduleCode_; }
      set {
        moduleCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModuleDescription" field.</summary>
    public const int ModuleDescriptionFieldNumber = 3;
    private string moduleDescription_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModuleDescription {
      get { return moduleDescription_; }
      set {
        moduleDescription_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Modules);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Modules other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FacilityId != other.FacilityId) return false;
      if (ModuleCode != other.ModuleCode) return false;
      if (ModuleDescription != other.ModuleDescription) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FacilityId != 0L) hash ^= FacilityId.GetHashCode();
      if (ModuleCode.Length != 0) hash ^= ModuleCode.GetHashCode();
      if (ModuleDescription.Length != 0) hash ^= ModuleDescription.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FacilityId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(FacilityId);
      }
      if (ModuleCode.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ModuleCode);
      }
      if (ModuleDescription.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ModuleDescription);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FacilityId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FacilityId);
      }
      if (ModuleCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModuleCode);
      }
      if (ModuleDescription.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModuleDescription);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Modules other) {
      if (other == null) {
        return;
      }
      if (other.FacilityId != 0L) {
        FacilityId = other.FacilityId;
      }
      if (other.ModuleCode.Length != 0) {
        ModuleCode = other.ModuleCode;
      }
      if (other.ModuleDescription.Length != 0) {
        ModuleDescription = other.ModuleDescription;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FacilityId = input.ReadInt64();
            break;
          }
          case 18: {
            ModuleCode = input.ReadString();
            break;
          }
          case 26: {
            ModuleDescription = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
